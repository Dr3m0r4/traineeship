# Demoing NiftyNet on some IXI data. 05.11.2018, A.S.L.

[image]
path_to_search = data/images
filename_contains=HH,orig
spatial_window_size = (144, 144, 144)
interp_order = 1
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)

[label]
path_to_search=data/labels
filename_contains=HH,ribbon
spatial_window_size = (144, 144, 144)
interp_order = 0
pixdim=(1.0, 1.0, 1.0)
axcodes=(A, R, S)

[SYSTEM]
cuda_devices = 0
num_threads = 8
num_gpus = 1
model_dir = model
dataset_split_file=./split.csv

[NETWORK]
name = dense_vnet
activation_function = prelu
batch_size = 6
decay = 0.0
reg_type = L2
volume_padding_size = 0
window_sampling = uniform
queue_length = 36
normalisation=False
whitening = True
norm_type = percentile
cutoff = (0.01, 0.99)
normalise_foreground_only=True
foreground_type = otsu_plus

[TRAINING]
sample_per_volume = 1
lr = 1e-3
loss_type = Dice
starting_iter = 0
save_every_n = 25
tensorboard_every_n = 10
max_iter = 500
max_checkpoints = 40
; validation_every_n = 10
; validation_max_iter = 0
; exclude_fraction_for_validation = 0.1
exclude_fraction_for_inference = 0.3
rotation_angle = (-10.0, 10.0)
scaling_percentage = (-10.0, 10.0)

[INFERENCE]
border = (0, 0, 0)
inference_iter = -1
save_seg_dir = ../outputs
output_interp_order = 0
output_postfix=-a

[EVALUATION]
evaluations = Dice,Jaccard,hausdorff_distance
save_csv_dir = ../outputs/eval

[SEGMENTATION]
image = image
label = label
output_prob = False
num_classes = 2
label_normalisation = True
